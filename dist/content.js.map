{"version":3,"file":"content.js","sources":["../content.js"],"sourcesContent":["/**\n * Content script для расширения Cognify\n * Отвечает за инъекцию React-приложения в страницу и коммуникацию с background.js\n */\n\nconsole.log(\"[Cognify] Content script загружен\");\n\n// Передаем пути к ресурсам через data-атрибуты DOM\nconst prepareResourceUrls = () => {\n  const resourceUrls = {\n    iconUrl: chrome.runtime.getURL(\"assets/icon.png\"),\n    explainIconUrl: chrome.runtime.getURL(\"assets/explane.svg\"),\n    translateIconUrl: chrome.runtime.getURL(\"assets/translate.svg\"),\n    sendIconUrl: chrome.runtime.getURL(\"assets/send.svg\"),\n    chatIconUrl: chrome.runtime.getURL(\"assets/chat-icon.svg\"),\n  };\n\n  // Создаем глобальную переменную для React-приложения (но это не сработает для инжектированного скрипта)\n  window.cognifyResources = resourceUrls;\n\n  console.log(\"[Cognify] Ресурсы расширения получены:\", resourceUrls);\n  return resourceUrls;\n};\n\n// Создаем визуальный индикатор для отладки\nconst createDebugIndicator = () => {\n  const indicator = document.createElement(\"div\");\n  indicator.innerText = \"Cognify Content Script работает\";\n  indicator.style.cssText = `\n    position: fixed;\n    bottom: 10px;\n    left: 10px;\n    background-color: rgba(0, 0, 0, 0.7);\n    color: white;\n    padding: 5px 10px;\n    border-radius: 4px;\n    font-size: 12px;\n    z-index: 100000;\n  `;\n  document.body.appendChild(indicator);\n\n  // Удаляем индикатор через 5 секунд\n  setTimeout(() => {\n    indicator.remove();\n  }, 5000);\n};\n\n// Показываем индикатор сразу, если body существует\nif (document.body) {\n  createDebugIndicator();\n} else {\n  // Иначе ждем загрузки DOM\n  document.addEventListener(\"DOMContentLoaded\", createDebugIndicator);\n}\n\n// Создаем контейнер для React-приложения\nconst createReactAppContainer = (resourceUrls) => {\n  console.log(\"[Cognify] Создание контейнера для React-приложения\");\n  const container = document.createElement(\"div\");\n  container.id = \"cognify-extension-root\";\n\n  // Устанавливаем правильное позиционирование контейнера\n  // Важно: его позиция должна быть fixed, размер на весь экран, и z-index высокий\n  container.style.cssText = `\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    z-index: 2147483647;\n    pointer-events: none !important;\n    overflow: visible;\n    background: transparent !important;\n    backdrop-filter: none !important;\n    -webkit-backdrop-filter: none !important;\n  `;\n\n  // Добавляем пути к ресурсам через data-атрибуты\n  container.dataset.resourcesIcon = resourceUrls.iconUrl;\n  container.dataset.resourcesExplainIcon = resourceUrls.explainIconUrl;\n  container.dataset.resourcesTranslateIcon = resourceUrls.translateIconUrl;\n  container.dataset.resourcesSendIcon = resourceUrls.sendIconUrl;\n  container.dataset.resourcesChatIcon = resourceUrls.chatIconUrl;\n\n  // Проверка установки data-атрибутов\n  console.log(\"[Cognify] Проверка data-атрибутов контейнера:\", {\n    \"data-resources-icon\": container.dataset.resourcesIcon,\n    \"data-resources-explain-icon\": container.dataset.resourcesExplainIcon,\n    \"data-resources-translate-icon\": container.dataset.resourcesTranslateIcon,\n    \"data-resources-send-icon\": container.dataset.resourcesSendIcon,\n    \"data-resources-chat-icon\": container.dataset.resourcesChatIcon,\n  });\n\n  // Добавляем контейнер в DOM\n  document.body.appendChild(container);\n  console.log(\n    \"[Cognify] Контейнер создан и добавлен в DOM с data-атрибутами:\",\n    container.dataset\n  );\n  return container;\n};\n\n// Инъекция React-приложения\nconst injectReactApp = async () => {\n  console.log(\"[Cognify] Начало инъекции React-приложения\");\n\n  // Проверяем, что контейнер еще не существует\n  if (document.getElementById(\"cognify-extension-root\")) {\n    console.log(\"[Cognify] Контейнер уже существует, пропускаем инъекцию\");\n    return;\n  }\n\n  // Получаем пути к ресурсам\n  const resourceUrls = prepareResourceUrls();\n\n  // Создаем контейнер с data-атрибутами для ресурсов\n  const container = createReactAppContainer(resourceUrls);\n\n  try {\n    // Загружаем скрипт с React-приложением\n    console.log(\"[Cognify] Загрузка bundle.js\");\n    const script = document.createElement(\"script\");\n    script.src = chrome.runtime.getURL(\"bundle.js\");\n\n    // Добавляем обработчики событий\n    script.onload = () => {\n      console.log(\"[Cognify] Bundle.js успешно загружен\");\n      // Триггерим кастомное событие, чтобы React узнал, что контейнер с ресурсами готов\n      const event = new CustomEvent(\"cognify-resources-ready\", {\n        detail: resourceUrls,\n      });\n      document.dispatchEvent(event);\n      console.log(\n        \"[Cognify] Отправлено событие cognify-resources-ready с данными:\",\n        resourceUrls\n      );\n    };\n    script.onerror = (error) =>\n      console.error(\"[Cognify] Ошибка при загрузке bundle.js:\", error);\n\n    // Добавляем скрипт в DOM\n    document.head.appendChild(script);\n    console.log(\"[Cognify] Скрипт добавлен в DOM\");\n  } catch (error) {\n    console.error(\n      \"[Cognify] Критическая ошибка при инъекции React-приложения:\",\n      error\n    );\n  }\n};\n\n// Попытка загрузить приложение немедленно\nconsole.log(\"[Cognify] Запуск начальной загрузки\");\nif (document.readyState === \"loading\") {\n  console.log(\n    \"[Cognify] Страница загружается, ожидаем событие DOMContentLoaded\"\n  );\n  document.addEventListener(\"DOMContentLoaded\", injectReactApp);\n} else {\n  console.log(\"[Cognify] Страница уже загружена, инъецируем приложение сразу\");\n  injectReactApp();\n}\n\n// Слушаем сообщения от background.js\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n  console.log(\"[Cognify] Получено сообщение от background.js:\", request);\n\n  if (request.action === \"openEmptyChat\") {\n    console.log(\"[Cognify] Генерация события openEmptyChat\");\n    // Перенаправляем сообщение в React-приложение через событие\n    const event = new CustomEvent(\"cognify-open-empty-chat\");\n    document.dispatchEvent(event);\n    console.log(\"[Cognify] Событие сгенерировано\");\n  }\n\n  // Обязательно возвращаем true, если sendResponse будет вызван асинхронно\n  return true;\n});\n"],"names":["prepareResourceUrls","resourceUrls","createDebugIndicator","indicator","createReactAppContainer","container","injectReactApp","script","event","error","request","sender","sendResponse"],"mappings":"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"}